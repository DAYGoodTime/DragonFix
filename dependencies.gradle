/*
 * Add your dependencies here. Supported configurations:
 *  - api("group:name:version:classifier"): if you use the types from this dependency in the public API of this mod
 *       Available at runtime and compiletime for mods depending on this mod
 *  - implementation("g:n:v:c"): if you need this for internal implementation details of the mod, but none of it is visible via the public API
 *       Available at runtime but not compiletime for mods depending on this mod
 *  - compileOnly("g:n:v:c"): if the mod you're building doesn't need this dependency during runtime at all, e.g. for optional mods
 *       Not available at all for mods depending on this mod, only visible at compiletime for this mod
 *  - compileOnlyApi("g:n:v:c"): like compileOnly, but also visible at compiletime for mods depending on this mod
 *       Available at compiletime but not runtime for mods depending on this mod
 *  - runtimeOnlyNonPublishable("g:n:v:c"): if you want to include a mod in this mod's runClient/runServer runs, but not publish it as a dependency
 *       Not available at all for mods depending on this mod, only visible at runtime for this mod
 *  - devOnlyNonPublishable("g:n:v:c"): a combination of runtimeOnlyNonPublishable and compileOnly for dependencies present at both compiletime and runtime,
 *       but not published as Maven dependencies - useful for RFG-deobfuscated dependencies or local testing
 *  - runtimeOnly("g:n:v:c"): if you don't need this at compile time, but want it to be present at runtime
 *       Available at runtime for mods depending on this mod
 *  - annotationProcessor("g:n:v:c"): mostly for java compiler plugins, if you know you need this, use it, otherwise don't worry
 *  - testCONFIG("g:n:v:c") - replace CONFIG by one of the above (except api), same as above but for the test sources instead of main
 *
 *  - shadowImplementation("g:n:v:c"): effectively the same as API, but the dependency is included in your jar under a renamed package name
 *       Requires you to enable usesShadowedDependencies in gradle.properties
 *
 *  - compile("g:n:v:c"): deprecated, replace with "api" (works like the old "compile") or "implementation" (can be more efficient)
 *
 * You can exclude transitive dependencies (dependencies of the chosen dependency) by appending { transitive = false } if needed,
 * but use this sparingly as it can break using your mod as another mod's dependency if you're not careful.
 *
 * To depend on obfuscated jars you can use `devOnlyNonPublishable(rfg.deobf("dep:spec:1.2.3"))` to fetch an obfuscated jar from maven,
 * or `devOnlyNonPublishable(rfg.deobf(project.files("libs/my-mod-jar.jar")))` to use a file.
 *
 * Gradle names for some of the configuration can be misleading, compileOnlyApi and runtimeOnly both get published as dependencies in Maven, but compileOnly does not.
 * The buildscript adds runtimeOnlyNonPublishable to also have a runtime dependency that's not published.
 *
 * For more details, see https://docs.gradle.org/8.0.1/userguide/java_library_plugin.html#sec:java_library_configurations_graph
 */
dependencies {
    api(rfg.deobf("curse.maven:RotaryCraft-235596:4721191"))
    api(rfg.deobf("curse.maven:DragonAPI-235591:4722480"))
    api(rfg.deobf("curse.maven:ReactorCraft-235593:4721203"))
    api(rfg.deobf("curse.maven:ElectriCraft-235594:4721198"))
    //some time may need original file
//    api("curse.maven:RotaryCraft-235596:4721191")
//    api("curse.maven:DragonAPI-235591:4722480")
//    api("curse.maven:ReactorCraft-235593:4721203")
//    api("curse.maven:ElectriCraft-235594:4721198")
    //dev use, use implementation which can load in ObfClient environment
    implementation("com.github.GTNewHorizons:NotEnoughItems:2.7.4-GTNH:dev")
    implementation('curse.maven:Exu-225561:2264383')
    implementation('com.github.GTNewHorizons:PersonalSpace:1.0.32')
    implementation('com.github.GTNewHorizons:waila:1.8.2')
    implementation('com.github.GTNewHorizons:WAWLA:1.3.0-GTNH')
    api('net.industrial-craft:industrialcraft-2:2.2.828-experimental:api')
    //those all are DragonAPI Environment needed
//    runtimeOnlyNonPublishable('curse.maven:Thaumcraft-223628:2227552')
    runtimeOnlyNonPublishable('curse.maven:BloodMagic-224791:2264826')
//    runtimeOnlyNonPublishable('curse.maven:Baubles-227083:2224857')
    runtimeOnlyNonPublishable('curse.maven:ProjectE-226410:2340786')
    runtimeOnlyNonPublishable("curse.maven:computercraft-67504:2269339")
    runtimeOnlyNonPublishable("com.github.GTNewHorizons:OpenComputers:1.11.2-GTNH:api")
    runtimeOnlyNonPublishable("com.github.GTNewHorizons:ForestryMC:4.9.0:dev")
    runtimeOnlyNonPublishable("com.github.GTNewHorizons:Botania:1.12.5-GTNH")
    runtimeOnlyNonPublishable("curse.maven:Framez-76118:2252712")
    runtimeOnlyNonPublishable("curse.maven:Mystcraft-224599:2958490")
    runtimeOnlyNonPublishable("curse.maven:biomes-o-plenty-220318:2499612")
    runtimeOnlyNonPublishable("com.github.GTNewHorizons:ForgeMultipart:1.6.2:dev")
}
